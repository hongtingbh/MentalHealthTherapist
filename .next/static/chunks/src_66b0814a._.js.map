{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/journal/journal-list.tsx"],"sourcesContent":["'use client';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { JournalEntry, Mood } from \"@/lib/definitions\";\nimport { format } from 'date-fns';\nimport { Smile, Frown, Meh, Wind, Activity } from \"lucide-react\";\nimport { Badge } from \"@/components/ui/badge\";\n\nconst MOOD_DETAILS: Record<Mood, { icon: React.ReactNode; color: string }> = {\n  Happy: { icon: <Smile className=\"h-5 w-5\" />, color: \"bg-green-500/20 text-green-700 border-green-300\" },\n  Calm: { icon: <Wind className=\"h-5 w-5\" />, color: \"bg-blue-500/20 text-blue-700 border-blue-300\" },\n  Neutral: { icon: <Meh className=\"h-5 w-5\" />, color: \"bg-gray-500/20 text-gray-700 border-gray-300\" },\n  Sad: { icon: <Frown className=\"h-5 w-5\" />, color: \"bg-purple-500/20 text-purple-700 border-purple-300\" },\n  Anxious: { icon: <Activity className=\"h-5 w-5\" />, color: \"bg-yellow-500/20 text-yellow-700 border-yellow-300\" },\n};\n\nfunction JournalCard({ entry }: { entry: JournalEntry }) {\n  const moodDetail = MOOD_DETAILS[entry.mood];\n  return (\n    <Card className=\"hover:shadow-md transition-shadow duration-300\">\n      <CardHeader>\n        <div className=\"flex justify-between items-start\">\n          <div>\n            <CardTitle className=\"font-headline text-xl\">{entry.summary}</CardTitle>\n            <CardDescription>{format(new Date(entry.createdAt), \"MMMM d, yyyy 'at' h:mm a\")}</CardDescription>\n          </div>\n          <Badge variant=\"outline\" className={`flex items-center gap-2 ${moodDetail.color}`}>\n            {moodDetail.icon}\n            {entry.mood}\n          </Badge>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <p className=\"text-muted-foreground line-clamp-3\">{entry.content}</p>\n      </CardContent>\n      <CardFooter>\n        {/* Can add actions here in the future */}\n      </CardFooter>\n    </Card>\n  );\n}\n\nexport function JournalList({ initialEntries }: { initialEntries: JournalEntry[] }) {\n  if (initialEntries.length === 0) {\n    return (\n      <div className=\"text-center py-20 border-2 border-dashed rounded-lg\">\n        <h2 className=\"text-xl font-semibold\">No entries yet</h2>\n        <p className=\"text-muted-foreground mt-2\">Click \"New Entry\" to start your mindful journey.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n      {initialEntries.map((entry) => (\n        <JournalCard key={entry.id} entry={entry} />\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;;;;;;AAOA,MAAM,eAAuE;IAC3E,OAAO;QAAE,oBAAM,6LAAC,uMAAA,CAAA,QAAK;YAAC,WAAU;;;;;;QAAc,OAAO;IAAkD;IACvG,MAAM;QAAE,oBAAM,6LAAC,qMAAA,CAAA,OAAI;YAAC,WAAU;;;;;;QAAc,OAAO;IAA+C;IAClG,SAAS;QAAE,oBAAM,6LAAC,mMAAA,CAAA,MAAG;YAAC,WAAU;;;;;;QAAc,OAAO;IAA+C;IACpG,KAAK;QAAE,oBAAM,6LAAC,uMAAA,CAAA,QAAK;YAAC,WAAU;;;;;;QAAc,OAAO;IAAqD;IACxG,SAAS;QAAE,oBAAM,6LAAC,6MAAA,CAAA,WAAQ;YAAC,WAAU;;;;;;QAAc,OAAO;IAAqD;AACjH;AAEA,SAAS,YAAY,EAAE,KAAK,EAA2B;IACrD,MAAM,aAAa,YAAY,CAAC,MAAM,IAAI,CAAC;IAC3C,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,6LAAC,mIAAA,CAAA,aAAU;0BACT,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;;8CACC,6LAAC,mIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAyB,MAAM,OAAO;;;;;;8CAC3D,6LAAC,mIAAA,CAAA,kBAAe;8CAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,MAAM,SAAS,GAAG;;;;;;;;;;;;sCAEtD,6LAAC,oIAAA,CAAA,QAAK;4BAAC,SAAQ;4BAAU,WAAW,CAAC,wBAAwB,EAAE,WAAW,KAAK,EAAE;;gCAC9E,WAAW,IAAI;gCACf,MAAM,IAAI;;;;;;;;;;;;;;;;;;0BAIjB,6LAAC,mIAAA,CAAA,cAAW;0BACV,cAAA,6LAAC;oBAAE,WAAU;8BAAsC,MAAM,OAAO;;;;;;;;;;;0BAElE,6LAAC,mIAAA,CAAA,aAAU;;;;;;;;;;;AAKjB;KAxBS;AA0BF,SAAS,YAAY,EAAE,cAAc,EAAsC;IAChF,IAAI,eAAe,MAAM,KAAK,GAAG;QAC/B,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAAwB;;;;;;8BACtC,6LAAC;oBAAE,WAAU;8BAA6B;;;;;;;;;;;;IAGhD;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACZ,eAAe,GAAG,CAAC,CAAC,sBACnB,6LAAC;gBAA2B,OAAO;eAAjB,MAAM,EAAE;;;;;;;;;;AAIlC;MAjBgB","debugId":null}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 440, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { z } from 'zod';\nimport { summarizeJournalEntry } from '@/ai/flows/summarize-journal-entry';\nimport { detectSelfHarm } from '@/ai/flows/detect-potential-self-harm';\nimport { classifyMoodDisorders } from '@/ai/flows/classify-mood-disorders';\nimport { JournalEntry, Mood } from './definitions';\n\n// This is a mock database. In a real application, you would use a database\n// like Firestore, PostgreSQL, etc.\nconst journalEntries: JournalEntry[] = [];\nlet journalIdCounter = 1;\n\nconst NewEntrySchema = z.object({\n  content: z.string().min(1, 'Journal entry cannot be empty.'),\n  mood: z.enum(['Happy', 'Calm', 'Neutral', 'Sad', 'Anxious']),\n});\n\nexport async function createJournalEntry(prevState: any, formData: FormData) {\n  const validatedFields = NewEntrySchema.safeParse({\n    content: formData.get('content'),\n    mood: formData.get('mood'),\n  });\n\n  if (!validatedFields.success) {\n    return {\n      errors: validatedFields.error.flatten().fieldErrors,\n      message: 'Failed to create entry.',\n    };\n  }\n  \n  const { content, mood } = validatedFields.data;\n\n  try {\n    const { summary } = await summarizeJournalEntry({ journalEntry: content });\n\n    const newEntry: JournalEntry = {\n      id: (journalIdCounter++).toString(),\n      createdAt: new Date().toISOString(),\n      mood: mood as Mood,\n      content,\n      summary,\n    };\n\n    journalEntries.unshift(newEntry); // Add to the beginning of the array\n\n    revalidatePath('/journal');\n    revalidatePath('/dashboard');\n    return { message: 'Journal entry created successfully.', success: true };\n  } catch (error) {\n    console.error('Error creating journal entry:', error);\n    return { message: 'Error processing AI summary. Please try again.' };\n  }\n}\n\nexport async function getJournalEntries() {\n  // In a real app, you'd fetch this from a database\n  return Promise.resolve(journalEntries);\n}\n\nexport async function postChatMessage(message: string, mediaDataUri?: string) {\n  try {\n    // 1. Check for self-harm\n    const selfHarmCheck = await detectSelfHarm({ text: message });\n    if (selfHarmCheck.selfHarmDetected) {\n      return {\n        role: 'assistant' as const,\n        id: new Date().toISOString(),\n        selfHarmWarning: selfHarmCheck.guidance,\n        text: 'It sounds like you are going through a difficult time. Please consider reaching out for professional help.',\n      };\n    }\n\n    // 2. Classify mood disorders\n    const classification = await classifyMoodDisorders({ message, mediaDataUri });\n\n    return {\n      role: 'assistant' as const,\n      id: new Date().toISOString(),\n      text: classification.summary,\n      classification: {\n        ptsdSymptoms: classification.ptsdSymptoms,\n        gadSymptoms: classification.gadSymptoms,\n        mmdSymptoms: classification.mmdSymptoms,\n        summary: classification.summary,\n      },\n    };\n  } catch (error) {\n    console.error('Error processing chat message:', error);\n    return {\n      role: 'assistant' as const,\n      id: new Date().toISOString(),\n      text: 'I apologize, but I encountered an error and cannot respond right now. Please try again later.',\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAmBsB,qBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 456, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/definitions.ts"],"sourcesContent":["export type User = {\n  id: string;\n  name: string;\n  email: string;\n  avatarUrl: string;\n};\n\nexport const MOODS = ['Happy', 'Calm', 'Neutral', 'Sad', 'Anxious'] as const;\nexport type Mood = (typeof MOODS)[number];\n\nexport type JournalEntry = {\n  id: string;\n  createdAt: string;\n  mood: Mood;\n  content: string;\n  summary: string;\n};\n\nexport type ChatMessage = {\n  id: string;\n  role: 'user' | 'assistant';\n  text: string;\n  mediaUrl?: string; // for displaying on the client\n  mediaMimeType?: string; // for displaying on the client\n  classification?: {\n    ptsdSymptoms: string[];\n    gadSymptoms: string[];\n    mmdSymptoms: string[];\n    summary: string;\n  };\n  selfHarmWarning?: string;\n};\n\nexport type MoodDataItem = {\n  mood: Mood;\n  count: number;\n};\n"],"names":[],"mappings":";;;AAOO,MAAM,QAAQ;IAAC;IAAS;IAAQ;IAAW;IAAO;CAAU","debugId":null}},
    {"offset": {"line": 475, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/journal/new-journal-entry.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useTransition, useEffect } from 'react';\nimport { useFormState, useFormStatus } from 'react-dom';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n  SheetFooter,\n  SheetClose\n} from '@/components/ui/sheet';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { createJournalEntry } from '@/lib/actions';\nimport { MOODS, Mood } from '@/lib/definitions';\nimport { Smile, Frown, Meh, Wind, Activity, PlusCircle, Loader2 } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { cn } from '@/lib/utils';\n\nconst MOOD_ICONS: Record<Mood, React.ReactNode> = {\n  Happy: <Smile className=\"h-6 w-6\" />,\n  Calm: <Wind className=\"h-6 w-6\" />,\n  Neutral: <Meh className=\"h-6 w-6\" />,\n  Sad: <Frown className=\"h-6 w-6\" />,\n  Anxious: <Activity className=\"h-6 w-6\" />,\n};\n\nconst NewEntrySchema = z.object({\n  content: z.string().min(10, 'Your entry should be at least 10 characters long.'),\n  mood: z.enum(MOODS, { required_error: 'Please select your mood.' }),\n});\n\ntype NewEntryFormState = z.infer<typeof NewEntrySchema>;\n\nfunction SubmitButton() {\n  const { pending } = useFormStatus();\n  return (\n    <Button type=\"submit\" disabled={pending}>\n      {pending ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : null}\n      Save Entry\n    </Button>\n  );\n}\n\nexport function NewJournalEntry() {\n  const { toast } = useToast();\n  const [open, setOpen] = useState(false);\n  const [selectedMood, setSelectedMood] = useState<Mood | null>(null);\n\n  const [state, formAction] = useFormState(createJournalEntry, { message: '', errors: {} });\n\n  const form = useForm<NewEntryFormState>({\n    resolver: zodResolver(NewEntrySchema),\n    defaultValues: {\n      content: '',\n      mood: undefined,\n    },\n  });\n\n  useEffect(() => {\n    if (state.success) {\n      toast({\n        title: \"Success!\",\n        description: state.message,\n      });\n      setOpen(false);\n      form.reset();\n      setSelectedMood(null);\n    } else if (state.message && !state.success) {\n      toast({\n        title: \"Error\",\n        description: state.message,\n        variant: \"destructive\",\n      });\n    }\n  }, [state, toast, form]);\n\n  const onFormAction = (formData: FormData) => {\n    formData.set('mood', selectedMood || '');\n    formAction(formData);\n  };\n\n  return (\n    <Sheet open={open} onOpenChange={setOpen}>\n      <SheetTrigger asChild>\n        <Button>\n          <PlusCircle className=\"mr-2 h-4 w-4\" /> New Entry\n        </Button>\n      </SheetTrigger>\n      <SheetContent className=\"sm:max-w-lg w-[90vw] flex flex-col\">\n        <SheetHeader>\n          <SheetTitle className=\"font-headline\">How are you feeling?</SheetTitle>\n          <SheetDescription>\n            Take a moment to write down your thoughts. Don't worry about grammar or spelling.\n          </SheetDescription>\n        </SheetHeader>\n        <form action={onFormAction} className=\"flex-1 flex flex-col gap-6 py-4\">\n          <div className=\"grid gap-2\">\n            <Label>How are you feeling right now?</Label>\n            <div className=\"flex gap-2 flex-wrap\">\n              {MOODS.map((mood) => (\n                <button\n                  key={mood}\n                  type=\"button\"\n                  onClick={() => {\n                    setSelectedMood(mood);\n                    form.setValue('mood', mood, { shouldValidate: true });\n                  }}\n                  className={cn(\n                    \"flex flex-col items-center justify-center gap-2 p-3 rounded-lg border-2 w-20 h-20 transition-all\",\n                    selectedMood === mood\n                      ? \"border-primary bg-primary/10 text-primary\"\n                      : \"border-transparent bg-muted/50 hover:bg-muted\"\n                  )}\n                >\n                  {MOOD_ICONS[mood]}\n                  <span className=\"text-xs font-medium\">{mood}</span>\n                </button>\n              ))}\n            </div>\n            {form.formState.errors.mood && <p className=\"text-sm font-medium text-destructive\">{form.formState.errors.mood.message}</p>}\n          </div>\n\n          <div className=\"grid gap-2 flex-1\">\n            <Label htmlFor=\"content\">Your thoughts</Label>\n            <Textarea\n              id=\"content\"\n              name=\"content\"\n              placeholder=\"Start writing here...\"\n              className=\"min-h-[200px] flex-1 resize-none\"\n              onChange={(e) => form.setValue('content', e.target.value, { shouldValidate: true })}\n            />\n            {form.formState.errors.content && <p className=\"text-sm font-medium text-destructive\">{form.formState.errors.content.message}</p>}\n          </div>\n          \n          <SheetFooter>\n            <SheetClose asChild>\n                <Button variant=\"outline\">Cancel</Button>\n            </SheetClose>\n            <SubmitButton />\n          </SheetFooter>\n        </form>\n      </SheetContent>\n    </Sheet>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}